{
    "contents" : "#' Plot overload\n#' \n#' Plots an allele frequencies object as bar or maps.\n#' @param x An object of type \\code{data.frame} created from \\code{frequencies}\n#' @param stratum The stratum to use for calculating frequencies (default 'Population')\n#' @param locus The name of the locus to use (default=NA)\n#' @param Longitude The name of the Longitude data column (default 'Longitude')\n#' @param Latitude The name of the Latitude data column (default 'Latitude')\n#' @param line.color An parameter indicating the color of the border of bars and pie wedges.\n#' @param label A flag indicating that the stratum names will be printed in the map plots.\n#' @param palette The number of the brewer palette to use (default=8)\n#' @param ... Ignored\n#' @return Nothing\n#' @importFrom grid grid.newpage pushViewport viewport grid.text grid.layout\n#' @import ggmap\n#' @export\n#' @author Rodney J. Dyer \\email{rjdyer@@vcu.edu}\npies_on_map <- function( x, stratum=\"Population\", locus=NA, Longitude='Longitude', Latitude='Latitude',line.color=\"black\", label=FALSE, palette=8,... ) {\n  \n  if( !inherits(x,\"data.frame\"))\n    stop(\"Cannot create pie charts without some data...\")\n  \n  if( missing(stratum) | !(stratum %in% names(x)))\n    stop(paste(\"Cannot use the stratum requested (\",stratum,\"), it is not in the data.frame\",sep=\"\"))\n\n  if( is.na(locus) | missing(locus) | !(locus %in% names(x)))\n    stop(paste(\"Cannot use the locus requested (\",locus,\"), it is not in the data.frame\",sep=\"\"))\n  \n  freqs <- frequencies( x, stratum=stratum, loci=locus )\n  coords <- strata_coordinates(x,stratum=stratum,longitude=Longitude,latitude=Latitude)\n  ret <- Allele <- Frequency <- Stratum <- NULL  \n  \n  suppressWarnings( map <- population_map( coords, ... ) )\n  bbox <- attributes(map)$bb\n  \n  ret <- ggmap( map, extent=\"device\" ) \n  coords$Longitude <- ( coords$Longitude - bbox$ll.lon ) / (bbox$ur.lon - bbox$ll.lon)\n  coords$Latitude <- ( coords$Latitude - bbox$ll.lat ) / (bbox$ur.lat - bbox$ll.lat)\n  \n  vplayout <- function( x , y ) viewport(layout.pos.row=x, layout.pos.col=y)\n  grid.newpage()\n  pushViewport( viewport( layout=grid.layout(100,100) ) )\n  print(ret, vp=vplayout(1:100,1:100) )\n  \n  freqs$Allele <- factor( freqs$Allele )\n  all.alleles <- levels( freqs$Allele )\n  pops <- sort( unique( freqs$Stratum ) )\n  for( pop in pops ){\n    df <- freqs[ freqs$Stratum == pop, ] \n    lon <- coords$Longitude[ coords$Stratum==pop]\n    lat <- coords$Latitude[ coords$Stratum==pop]\n    pie <- ggplot( df, aes(y=Frequency,x=\"\",fill=Allele)) + \n      geom_bar(width=0.75, color=line.color, stat=\"identity\") + \n      coord_polar(theta='y') + \n      theme_nothing()\n    if( length(df$Allele) < 13 )\n      pie <- pie +  scale_fill_brewer(type=\"div\", palette=palette)\n    print( pie, vp=viewport(x=lon,y=lat,width=0.05,height=0.05) )\n  }\n  \n  if( label ) \n    grid.text( label=coords[,1], x=coords[,2]+0.02, y=coords[,3]+0.02, gp=grid::gpar(col=line.color), just=\"left\")\n  \n  \n  \n  \n  invisible(NULL)  \n}\n",
    "created" : 1384529480604.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2260952685",
    "id" : "4AA8C642",
    "lastKnownWriteTime" : 1384532743,
    "path" : "~/Documents/Dropbox/R/gstudio/gstudio/R/pies_on_map.R",
    "project_path" : "R/pies_on_map.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}