{
    "contents" : "#' Estimation of , genetic structure statistics.\n#' \n#' This function estimates common , genetic statistics.\n#' @param x An object of type \\code{data.frame} with at least a single column\n#'  of type \\code{\\link{locus}}\n#' @param stratum The stratum to use as groupings (default='Population').\n#' @param mode Whic statistic to estimate.  Current options include:\n#' \\itemize{\n#'  \\item{Gst}{Nei's Gst (not Berg and Hamrick)}\n#'  \\item{Gst_prime}{Hedrick's correction of Nei's Gst for diverse loci}\n#'  \\item{Dest}{Joost's estimate}\n#' }\n#' @param nperm The number of permutations used to test the hypothesis that\n#'  the parameter = 0.\n#' @param size.correct A flag indicating that the estimate should be corrected for\n#'  based upon sample sizes (default=TRUE).\n#' @param pairwise A flag indicating that the analysis should be done among all pairs of \n#'  strata. \n#' @param locus An optional parameter specifying the locus or loci to be used\n#'  in the analysis.  If this is not specified, then all loci are used.\n#' @return An object of type \\code{data.frame} containing estimates for each locus and a\n#'  multilocus estiamte.  If \\code{pairwise=TRUE}, then it returns the multilocus (if more\n#'  than one locus) estiamte in a matrix format.\n#' @note The multilocus estimation of these parameters is estimated following the\n#'  suggestions of Culley et al. (2001) A comparison of two methods of calculating Gst, \n#'  a genetic measure of population differentiation.  American Journal of Botany 89(3): 460-465.\n#' @export\n#' @examples\n#'  AA <- locus( c(\"A\",\"A\") )\n#'  AB <- locus( c(\"A\",\"B\") )\n#'  BB <- locus( c(\"B\",\"B\") )\n#'  locus <- c(AA,AA,AA,AA,BB,BB,BB,AB,AB,AA)\n#'  locus2 <- c(AB,BB,AA,BB,BB,AB,AB,AA,AA,BB)\n#'  Population <- c(rep(\"Pop-A\",5),rep(\"Pop-B\",5))\n#'  df <- data.frame( Population, TPI=locus, PGM=locus2 )\n#'  genetic_structure( df, mode=\"Gst\", nperm=999)\n#'  genetic_structure( df, mode=\"Gst\", pairwise=TRUE)\n#'  genetic_structure( df, mode=\"Gst\", pairwise=TRUE, locus=\"TPI\" )\ngenetic_structure <- function( x, stratum=\"Population\", mode=c(\"Gst\", \"Gst_prime\", \"Dest\")[1], nperm=0, size.correct=TRUE, pairwise=FALSE, locus ) {\n  \n  if( !inherits(x,\"data.frame\") )\n      stop(\"You need to pass a data frame to the funciton genetic_structure()...\")\n    \n  if( !(stratum %in% names(x) ) ) \n    stop(\"You must specify which stratum to use for the estimation of genetic structure.\")\n\n  if( !(mode %in% c(\"Gst\", \"Gst_prime\", \"Dest\")) )\n    stop(paste(\"The structure mode\",mode,\"is not recognized\") )\n  \n  # subsets of loci\n  if( !missing( locus ) ){\n    \n    if( all( locus %in% column_class(x,\"locus\")) ) \n      x <- x[, c(stratum,locus) ]\n    else\n      stop(paste(\"At least one of the loci you requested\", paste(locus,collapse=\", \"), \"is not in the data.frame you passed\"))\n  }\n  \n  # do this in a pair-wise fashion\n  if( pairwise ) {\n    pops <- levels( factor( x[[stratum]] ))\n    K <- length(pops)\n    ret <- matrix(0,nrow=K,ncol=K)\n    rownames(ret) <- colnames(ret) <- pops\n    diag(ret) <- NA\n    for( i in 1:K){\n      for( j in i:K){\n        if( i!=j ){\n          y <- rbind(x[x[[stratum]]==pops[i],], x[x[[stratum]]==pops[j],])\n          r <- genetic_structure( y, stratum, mode, nperm=0, size.correct )\n          ret[i,j] <- ret[j,i] <-  r[nrow(r),2]\n        } \n      }\n    }\n    \n    return( ret )\n  }\n  \n  \n  else {\n    \n    mode <- tolower( mode )\n    \n    ret <- data.frame()\n    \n    if( mode == \"gst\") \n      ret <- Gst( x, stratum, nperm, size.correct )\n    \n    else if( mode == \"gst_prime\") \n      ret <- Gst_prime( x, stratum, nperm, size.correct )\n    \n    else if( mode == \"dest\" ) \n      ret <- Dest( x, stratum, nperm, size.correct )\n    \n  }\n  \n\n  \n  return( ret )\n}\n\n\n\nprint.genetic_structure <- function( x, ... ){\n  \n  cat(\"Genetic Structure\\n\")\n  print(as.data.frame.genetic_structure(x))\n  \n}\n\n\n",
    "created" : 1383751685064.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "902822481",
    "id" : "9C80DA4",
    "lastKnownWriteTime" : 1383753003,
    "path" : "~/Documents/Dropbox/R/gstudio/gstudio/R/genetic_structure.R",
    "project_path" : "R/genetic_structure.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}