{
    "contents" : "\n\n\n#' Conversion of genetic_structure to data.frame\n#' \n#' Converts the \\code{\\link{genetic_structure}} object to a common\n#'  data.frame object with keys 'locus', 'Allele' and 'Frequency'\n#' @param x An objet of type \\code{\\link{genetic_structure}}\n#' @param ... Ignored\n#' @return A data frame\n#' @author Rodney J. Dyer \\email{rjdyer@@vcu.edu}\n#' @export\n#' @method as.data.frame genetic_structure\nas.data.frame.genetic_structure <- function(x, ...) {\n  df <- data.frame( unlist(lapply( x$loci, function(x) return( x$estimate )) ) , stringsAsFactors=FALSE)\n  names(df)[1] <- x$mode\n  df$Hs <- unlist( lapply( x$loci, function(x) return( x$Hs ) ) )\n  df$Ht <- unlist( lapply( x$loci, function(x) return( x$Ht ) ) )\n  \n  muHs <- mean(df$Hs)\n  muHt <- mean(df$Ht)\n  muParam <- 1 - muHs/muHt\n  \n  df <- rbind( df, c(muParam, muHs, muHt))\n  rownames(df)[dim(df)[1]] <- \"Multilocus\"\n  \n  return(df)\n  \n}\n\n#' Converts locus to a data frame\n#' \n#' This converts a \\code{locus} object into a \\code{data.frame} so that\n#'  you can use \\code{locus} objects in a column of a \\code{data.frame}.\n#' @param x An object of type \\code{code}.  This can be either a single genotype \n#'  (a rare case) or a vector of genotypes (preferred). \n#' @param \\dots Additional objects that are passed to \\code{as.data.frame.vector}.\n#' @return A \\code{data.frame} object.\n#' @note If you do not assign a data name to the \\code{x} in assignment (e.g., \n#'  TPI=x ) it will name the column in the \\code{data.frame} the same as the name\n#'  of the variable you assigned it.  If this is confusing see the examples.\n#' @method as.data.frame locus\n#' @export\n#' @author Rodney J. Dyer \\email{rjdyer@@vcu.edu}\n#' @examples\n#' \n#' loc1 <- c( locus(1:2), locus(1:2), locus( c(1,1) ) )\n#' df <- data.frame( ID=1:3, NAMED_LOCUS=loc1, loc1 )\n#' summary(df)\n#' \nas.data.frame.locus <- function( x, ... ) {\n  nm <- deparse( substitute(x), width.cutoff = 500L )\n  return( as.data.frame.vector(x, ..., nm=nm ) ) \n}\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1378254491003.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2358055390",
    "id" : "77C11F74",
    "lastKnownWriteTime" : 1369404144,
    "path" : "~/Dropbox/R/gstudio/gstudio/R/as_data_frame.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}